NOTES
- Make sure you use userAxios in order to create new comment (gotta associate it)
- Make sure you whitelist IPs on MongoDB Atlas
- Adapt all axios URLs for production

TODO
3. All issues

COMPLETE
1. //DONE User Authentication
    - //DONE Login & signup page.  Authentication must occur to access any part of app.
4. //DONE Backend Config
    - //DONE Create backend models & routes for persisting topics, comments, votes
    - //DONE React front end
    - //DONE Node & Express backend
    - //DONE MongoDB & Mongoose Data models
    - //DONE User auth with dotenv, jwt, expressjwt
5. //DONE API Operations
    - //DONE GET, POST, PUT, DELETE for issues and comments
1. //DONE Add a comment
2. //DONE Render comments
3. //DONE User Interaction
    - //DONE Include a page for logged-in users to add new posts
    - //DONE Implement a page where logged-in users can view all the posts theyve created
    - //DONE Allow users to comment on posts with an unlimited number of comments per posts
4. //DONE downvote functionality (copy upvote)
5. //DONE Sort
2. //DONE Issue List
    - //DONE List of issues
        - //DONE Each has a title & description
        - //DONE Upvote or downvote each
            - //DONE One per User
    - //DONE Sort based on number of upvotes, with the most upvoted issues at the top
    - //DONE Display total number of votes per issues